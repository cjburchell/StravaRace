<script type="text/javascript" src="/javascripts/category.js"></script>
<script type="text/javascript" src="/javascripts/stage.js"></script>
<script type="text/javascript" src="/javascripts/guid.js"></script>
<script type="text/javascript">
    var app = angular.module('app', [ 'ui.bootstrap.datetimepicker', 'ui.bootstrap', 'ngAnimate']);

    app.filter('isStageSelected',
            function() {
                return function(value) {
                    return value? "success" : "";
                };
            });

    app.filter('typeToIcon',
            function() {
                return function (value)
                {
                    return SegmentTypeToImage(value);
                };
            });

    app.filter('routeTypeToIcon',
            function() {
                return function (value)
                {
                    return RouteTypeToImage(value);
                };
            });

    app.controller('createControler', function($scope, $http) {
        $scope.activity = <%- JSON.stringify(activity)%>;
        $scope.stages = [];
        $scope.routes = [];

        $scope.activity.startTime = new Date($scope.activity.startTime);
        $scope.activity.endTime = new Date($scope.activity.endTime);

        $scope.deleteCategory = function (cat) {
            arrayUtils.remove($scope.activity.categories, cat);
        }

        $scope.deleteStage = function (stage) {
            arrayUtils.remove($scope.activity.stages, stage);

            var stageNumber = 1;
            $scope.activity.stages.sort(function (item1, item2)
            {
                return item1.number-item2.number;
            }).forEach(function (item)
            {
                item.number = stageNumber;
                stageNumber++;
            });

            $scope.activity.totalDistance = $scope.activity.stages.reduce(function (total, item) {
                return total + item.distance;
            }, 0);
        }

        $scope.moveStageUp = function (stage) {
            var otherStage = $scope.activity.stages.find(function (item)
            {
                return item.number === (stage.number-1)
            });

            if(otherStage)
            {
                otherStage.number = stage.number
                stage.number--;
            }
        }

        $scope.moveStageDown = function (stage) {
            var otherStage = $scope.activity.stages.find(function (item)
            {
                return item.number === (stage.number+1)
            });

            if(otherStage)
            {
                otherStage.number = stage.number
                stage.number++;
            }
        }

        $scope.onApply = function () {
            <% if(isCreating){%>
            $http.put("/data/activity", $scope.activity)
            <% } else {%>
            $http.post("/data/activity/" + $scope.activity._id, $scope.activity)
            <%}%>
                    .then(function(response) {
                        if(response.data)
                        {
                            location.replace("/activity/details/" + response.data);
                        }
                    });
        };

        $scope.back = function () {
            <% if(isCreating){%>
            location.replace("/home");
            <% } else {%>
            location.replace("/activity/details/" + $scope.activity._id);
            <%}%>
        };

        $scope.showAddCategory = function () {
            $scope.newCategory = new category.Category(guid.Create());
        };

        $scope.addCategory = function () {
            $scope.activity.categories.push($scope.newCategory);
        };

        function GetStages(page)
        {
            const pageSize = 50;

            $http.get("/strava/starredsegments?per_page=" + pageSize + "&page=" + page)
                    .then(function(response) {

                        var segments = response.data.filter(function(item){return !item.private;});

                        $scope.stages = $scope.stages.concat(segments);

                        $scope.activity.stages.forEach(function (stage)
                        {
                            arrayUtils.remove($scope.stages, stage);
                        });

                        $scope.loadingStages = false;

                        if(response.data.length === pageSize)
                        {
                            page++;
                            GetStages(page);
                        }
                    });
        }

        function GetRoutes()
        {
            $http.get("/strava/routes")
                    .then(function(response) {
                        $scope.routes = response.data;
                        $scope.loadingRouts = false;
                    });
        }

        $scope.getRoutes = function()
        {
            $scope.routes = [];
            $scope.loadingRouts = true;
            GetRoutes();
        };

        $scope.showRoutes = function ()
        {
            $scope.selectedRoute = undefined;
            $scope.routeSeachText = undefined;
            $scope.autoAddStages = false;
            if($scope.routes.length === 0)
            {
                $scope.getRoutes();
            }
        };

        $scope.selectRoute = function (route) {
            $scope.selectedRoute = route;
        };

        $scope.getStages = function()
        {
            $scope.stages = [];
            $scope.loadingStages = true;
            GetStages(1);
        };

        $scope.showAddStage = function () {
            $scope.stageSeachText = undefined;
            $scope.selectedStage = undefined;
            if($scope.stages.length === 0)
            {
                $scope.getStages();
            }
        };

        function AddStage(stage)
        {
            var newStage = new stage_utils.Stage(stage.id);
            newStage.number = $scope.activity.stages.length + 1;
            newStage.name = stage.name;
            newStage.distance = stage.distance;
            newStage.activity_type = stage.activity_type;
            newStage.map = stage.map;
            newStage.start_latlng = stage.start_latlng;
            newStage.end_latlng = stage.end_latlng;
            newStage.city = stage.city;
            newStage.state = stage.state;
            newStage.country = stage.country;

            $scope.activity.stages.push(newStage);
            arrayUtils.remove($scope.stages, stage);

            $scope.activity.totalDistance = $scope.activity.stages.reduce(function (total, item) {
                return total + item.distance;
            }, 0);

            $http.get("/strava/segmentmap/" + stage.id)
                    .then(function(response) {
                        newStage.map = response.data.map;
                    });
        }

        $scope.clearRoute = function ()
        {
            $scope.activity.routeId = undefined;
            $scope.activity.routeName = undefined;
            $scope.activity.routeDistance = undefined;
            $scope.activity.routeMap = undefined;
        }

        $scope.setRoute = function ()
        {
            $scope.activity.routeId = $scope.selectedRoute.id;
            $scope.activity.routeName = $scope.selectedRoute.name;
            $scope.activity.routeDistance = $scope.selectedRoute.distance;

            $http.get("/strava/route/" + $scope.selectedRoute.id)
                    .then(function (response)
                    {
                        $scope.activity.routeMap = response.data.map;

                        if($scope.autoAddStages)
                        {
                            $scope.stages = [];
                            $scope.activity.stages = [];

                            response.data.segments.forEach(function (item)
                            {
                                AddStage(item);
                            });
                        }
                    });
        }

        $scope.addStage = function () {
            AddStage($scope.selectedStage);
        };

        $scope.selectStage = function (stage) {
            $scope.selectedStage = stage;
        };
    });

</script>